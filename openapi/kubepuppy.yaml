openapi: 3.0.0
info:
  version: 1.0.0
  title: KubePuppy API
servers:
  - url: /api/v1
paths:
  '/certificate/validate':
    post:
      tags:
        - certificate
      summary: Shows details regarding the specified certificate (validity and assigned roles and permissions).
      operationId: validateCertificate
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
      requestBody:
        $ref: '#/components/requestBodies/CertificateUpload'
  '/subjects':
    get:
      tags:
        - subject
      summary: Lists all subjects.
      operationId: listSubjects
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subject'
  '/subject/{subjectId}':
    get:
      tags:
        - subject
      summary: Gets details regarding the specified subject.
      operationId: getSubject
      parameters:
        - name: subjectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectDetails'
  '/roleBindings':
    get:
      tags:
        - roleBinding
      summary: Lists all role bindings (both cluster and namespaced).
      operationId: listRoleBindings
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleBinding'
  '/roleBinding/{roleBindingId}':
    get:
      tags:
        - roleBinding
      summary: Shows details regarding the specified role binding (either cluster or namespaced).
      operationId: getRoleBinding
      parameters:
        - name: roleBindingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleBindingDetails'
    delete:
      tags:
        - roleBinding
      summary: Deletes the specified role binding.
      operationId: deleteRoleBinding
      parameters:
        - name: roleBindingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/roles':
    get:
      tags:
        - role
      summary: Lists all roles (both cluster and namespaced).
      operationId: listRoles
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
  '/role/{roleId}':
    get:
      tags:
        - role
      summary: Shows details regarding the specified role (either cluster or namespaced).
      operationId: getRole
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDetails'
    delete:
      tags:
        - role
      summary: Deletes the specified role (either cluster or namespaced).
      operationId: deleteRole
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
components:
  requestBodies:
    CertificateUpload:
      content:
        application/json:
          schema:
            type: string
            description: "X.509 certificate data"
  schemas:
    ApiObject:
      type: object
      required:
        - id
        - kind
        - name
        - namespace
      properties:
        id:
          type: string
        kind:
          type: string
        name:
          type: string
        namespace:
          type: string
    Certificate:
      type: object
      required:
        - source
        - isAuthorised
      properties:
        source:
          type: string
          description: "X.509 certificate data"
        subjectAsText:
          type: string
          description: "X.509 subject (in string format)"
        subjectCommonName:
          type: string
        subjectOrganization:
          type: string
        issuer:
          type: string
          description: "X.509 issuer (in string format)"
        isAuthorised:
          type: boolean
          description: "Whether certificate is signed by cluster CA (and so can be used for K8S RBAC)"
    Role:
      type: object
      required:
        - roleId
        - kind
        - name
      properties:
        roleId:
          type: string
        kind:
          type: string
          enum: [User, Group, ServiceAccount]
        name:
          type: string
        namespace:
          type: string
          description: "For a ServiceAccount, the account namespace. Null for Users and Groups"
    RoleDetails:
      type: object
      required:
        - roleId
        - kind
        - name
      properties:
        roleId:
          type: string
        kind:
          type: string
          enum: [User, Group, ServiceAccount]
        name:
          type: string
        namespace:
          type: string
          description: "For a ServiceAccount, the account namespace. Null for Users and Groups"
    RoleBinding:
      type: object
      required:
        - roleBindingId
        - kind
        - name
      properties:
        roleBindingId:
          type: string
        kind:
          type: string
          enum: [ClusterRoleBinding, RoleBinding]
        name:
          type: string
        namespace:
          type: string
          description: "For kind RoleBinding, the role binding namespace. Not applicable for kind ClusterRoleBinding."
    RoleBindingDetails:
      type: object
      required:
        - roleBindingId
        - kind
        - name
      properties:
        roleBindingId:
          type: string
        kind:
          type: string
          enum: [ClusterRoleBinding, RoleBinding]
        name:
          type: string
        namespace:
          type: string
          description: "For kind RoleBinding, the role binding namespace. Not applicable for kind ClusterRoleBinding."
    Subject:
      type: object
      required:
        - roleBindings
      properties:
        roleBindings:
          type: array
          items:
            $ref: '#/components/schemas/SubjectRoleBinding'
      allOf:
       - $ref: '#/components/schemas/ApiObject'
    SubjectRoleBinding:
      type: object
      required:
        - roleBinding
      properties:
        roleBinding:
          $ref: '#/components/schemas/ApiObject'
        role:
          $ref: '#/components/schemas/ApiObject'
    SubjectDetails:
      type: object
      required:
        - roleBindings
        - rules
      properties:
        roleBindings:
          type: array
          items:
            $ref: '#/components/schemas/SubjectDetailsRoleBinding'
      allOf:
       - $ref: '#/components/schemas/ApiObject'
    SubjectDetailsRoleBinding:
      type: object
      required:
        - roleBinding
      properties:
        roleBinding:
          $ref: '#/components/schemas/ApiObject'
        role:
          $ref: '#/components/schemas/ApiObject'
        rules:
          type: array
          items: {}
    ApiResponse:
      title: An uploaded response
      description: Describes the result of uploading an image resource
      type: object
      properties: {}
